{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hdcha\\\\Documents\\\\GitHub\\\\gem\\\\NDSC\\\\src\\\\components\\\\CharacterDisplay.js\";\nimport React, { useState } from 'react';\nimport CharacterSprite from './CharacterSprite';\nimport SVGCharacter from './SVGCharacter';\nimport CSSCharacter from './CSSCharacter';\nimport './CharacterDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CharacterDisplay({\n  character\n}) {\n  const getBodyTypeColor = bodyType => {\n    switch (bodyType) {\n      case 'beginner':\n        return '#95a5a6';\n      case 'intermediate':\n        return '#3498db';\n      case 'advanced':\n        return '#e67e22';\n      case 'elite':\n        return '#f1c40f';\n      default:\n        return '#95a5a6';\n    }\n  };\n  const getBodyTypeEmoji = bodyType => {\n    switch (bodyType) {\n      case 'beginner':\n        return '🙂';\n      case 'intermediate':\n        return '💪';\n      case 'advanced':\n        return '🏋️';\n      case 'elite':\n        return '🏆';\n      default:\n        return '🙂';\n    }\n  };\n  const getBodySize = bodyType => {\n    switch (bodyType) {\n      case 'beginner':\n        return 1;\n      case 'intermediate':\n        return 1.1;\n      case 'advanced':\n        return 1.2;\n      case 'elite':\n        return 1.3;\n      default:\n        return 1;\n    }\n  };\n  const bodyColor = getBodyTypeColor(character.bodyType);\n  const bodySize = getBodySize(character.bodyType);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-display card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\uCE90\\uB9AD\\uD130\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"character-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pixel-character\",\n        style: {\n          transform: `scale(${bodySize})`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pixel-block head\",\n          style: {\n            backgroundColor: '#fdbcb4'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pixel-block torso\",\n          style: {\n            backgroundColor: bodyColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pixel-block left-arm\",\n          style: {\n            backgroundColor: bodyColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pixel-block right-arm\",\n          style: {\n            backgroundColor: bodyColor\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pixel-block left-leg\",\n          style: {\n            backgroundColor: '#34495e'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pixel-block right-leg\",\n          style: {\n            backgroundColor: '#34495e'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"level-text\",\n          children: [\"Lv.\", character.level]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"body-type\",\n          children: [getBodyTypeEmoji(character.bodyType), \" \", character.bodyType.toUpperCase()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"character-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"EXP:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value exp\",\n              children: character.experience\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"stat-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-label\",\n              children: \"\\uD83D\\uDCB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"stat-value coins\",\n              children: character.coins\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_c = CharacterDisplay;\nvar _c;\n$RefreshReg$(_c, \"CharacterDisplay\");","map":{"version":3,"names":["React","useState","CharacterSprite","SVGCharacter","CSSCharacter","jsxDEV","_jsxDEV","CharacterDisplay","character","getBodyTypeColor","bodyType","getBodyTypeEmoji","getBodySize","bodyColor","bodySize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","transform","backgroundColor","level","toUpperCase","experience","coins","_c","$RefreshReg$"],"sources":["C:/Users/hdcha/Documents/GitHub/gem/NDSC/src/components/CharacterDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport CharacterSprite from './CharacterSprite';\r\nimport SVGCharacter from './SVGCharacter';\r\nimport CSSCharacter from './CSSCharacter';\r\nimport './CharacterDisplay.css';\r\n\r\nexport default function CharacterDisplay({ character }) {\r\n  const getBodyTypeColor = (bodyType) => {\r\n    switch (bodyType) {\r\n      case 'beginner': return '#95a5a6';\r\n      case 'intermediate': return '#3498db';\r\n      case 'advanced': return '#e67e22';\r\n      case 'elite': return '#f1c40f';\r\n      default: return '#95a5a6';\r\n    }\r\n  };\r\n\r\n  const getBodyTypeEmoji = (bodyType) => {\r\n    switch (bodyType) {\r\n      case 'beginner': return '🙂';\r\n      case 'intermediate': return '💪';\r\n      case 'advanced': return '🏋️';\r\n      case 'elite': return '🏆';\r\n      default: return '🙂';\r\n    }\r\n  };\r\n\r\n  const getBodySize = (bodyType) => {\r\n    switch (bodyType) {\r\n      case 'beginner': return 1;\r\n      case 'intermediate': return 1.1;\r\n      case 'advanced': return 1.2;\r\n      case 'elite': return 1.3;\r\n      default: return 1;\r\n    }\r\n  };\r\n\r\n  const bodyColor = getBodyTypeColor(character.bodyType);\r\n  const bodySize = getBodySize(character.bodyType);\r\n\r\n  return (\r\n    <div className=\"character-display card\">\r\n      <h3>캐릭터</h3>\r\n      \r\n      <div className=\"character-container\">\r\n        <div className=\"pixel-character\" style={{ transform: `scale(${bodySize})` }}>\r\n          {/* 머리 */}\r\n          <div className=\"pixel-block head\" style={{ backgroundColor: '#fdbcb4' }} />\r\n          \r\n          {/* 몸통 */}\r\n          <div className=\"pixel-block torso\" style={{ backgroundColor: bodyColor }} />\r\n          \r\n          {/* 팔 */}\r\n          <div className=\"pixel-block left-arm\" style={{ backgroundColor: bodyColor }} />\r\n          <div className=\"pixel-block right-arm\" style={{ backgroundColor: bodyColor }} />\r\n          \r\n          {/* 다리 */}\r\n          <div className=\"pixel-block left-leg\" style={{ backgroundColor: '#34495e' }} />\r\n          <div className=\"pixel-block right-leg\" style={{ backgroundColor: '#34495e' }} />\r\n          \r\n          {/* 레벨 표시 */}\r\n          <div className=\"level-text\">Lv.{character.level}</div>\r\n        </div>\r\n        \r\n        <div className=\"character-info\">\r\n          <div className=\"body-type\">\r\n            {getBodyTypeEmoji(character.bodyType)} {character.bodyType.toUpperCase()}\r\n          </div>\r\n          \r\n          <div className=\"character-stats\">\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">EXP:</span>\r\n              <span className=\"stat-value exp\">{character.experience}</span>\r\n            </div>\r\n            <div className=\"stat-item\">\r\n              <span className=\"stat-label\">💰</span>\r\n              <span className=\"stat-value coins\">{character.coins}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}